(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{100:function(e,n,r){"use strict";r.d(n,"a",(function(){return d})),r.d(n,"b",(function(){return m}));var t=r(0),o=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),l=function(e){var n=o.a.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},d=function(e){var n=l(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),b=t,m=d["".concat(a,".").concat(b)]||d[b]||u[b]||i;return r?o.a.createElement(m,c(c({ref:n},p),{},{components:r})):o.a.createElement(m,c({ref:n},p))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,a=new Array(i);a[0]=b;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var p=2;p<i;p++)a[p]=r[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},68:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return s})),r.d(n,"rightToc",(function(){return p})),r.d(n,"default",(function(){return d}));var t=r(2),o=r(6),i=(r(0),r(100)),a=["components"],c={id:"bind-decorator.md",title:"Bind decorator",sidebar_label:"Bind decorator",slug:"/bind-decorator"},s={unversionedId:"bind-decorator.md",id:"bind-decorator.md",isDocsHomePage:!1,title:"Bind decorator",description:"This bind decorator is used in the component.",source:"@site/docs\\bind-decorator.md",slug:"/bind-decorator",permalink:"/docs/bind-decorator",editUrl:"https://github.com/monster-js/docs-v1/blob/master/docs/bind-decorator.md",version:"current",sidebar_label:"Bind decorator",sidebar:"someSidebar",previous:{title:"Available pipes",permalink:"/docs/available-pipes"},next:{title:"Environment variables",permalink:"/docs/environment-variables"}},p=[{value:"Possible errors",id:"possible-errors",children:[]}],l={rightToc:p};function d(e){var n=e.components,r=Object(o.a)(e,a);return Object(i.b)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This bind decorator is used in the component.\nThis is to prevent the component from creating new function every time we use ",Object(i.b)("inlineCode",{parentName:"p"},".bind")," method.\nWe can also solve this problem by using the ",Object(i.b)("inlineCode",{parentName:"p"},".bind")," method in the constructor but it will cause a bloated constructor.\nUsing this bind decorator will promote clean codes."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import { Component, Bind } from '@monster-js/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    message = 'Hello World!';\n\n    @Bind\n    getMessage() {\n        return this.message;\n    }\n\n    render() {\n        return <app-child prop:get-message={this.getMessage}></app-child>\n    }\n}\n")),Object(i.b)("h2",{id:"possible-errors"},"Possible errors"),Object(i.b)("p",null,"Using bind in a method that has an argument with an interface might throw a compilation error.\nTo solve this issue we just need to add the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," to the interface's import declaration."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import { Component, Bind } from '@monster-js/core';\nimport type { UserInterface } from './user.interface';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    message = 'Hello ';\n\n    @Bind\n    getMessage(user: UserInterface) {\n        return this.message + user.name + '!';\n    }\n\n    render() {\n        return <app-child prop:get-message={this.getMessage}></app-child>\n    }\n}\n")))}d.isMDXComponent=!0}}]);