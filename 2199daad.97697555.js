(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{100:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),p=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},b=function(e){var n=p(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(t),m=r,d=b["".concat(a,".").concat(m)]||b[m]||u[m]||o;return t?i.a.createElement(d,l(l({ref:n},s),{},{components:t})):i.a.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},63:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return s}));var r=t(2),i=(t(0),t(100));const o={id:"environment-variables.md",title:"Environment variables",sidebar_label:"Environment variables",slug:"/environment-variables"},a={unversionedId:"environment-variables.md",id:"environment-variables.md",isDocsHomePage:!1,title:"Environment variables",description:"Environment variables helps us define static variables for our application.",source:"@site/docs\\environment-variables.md",slug:"/environment-variables",permalink:"/docs/environment-variables",editUrl:"https://github.com/monster-js/docs-v1/blob/master/docs/environment-variables.md",version:"current",sidebar_label:"Environment variables",sidebar:"someSidebar",previous:{title:"Bind decorator",permalink:"/docs/bind-decorator"},next:{title:"Known issues",permalink:"/docs/known-issues"}},l=[{value:"Custom environment variables",id:"custom-environment-variables",children:[]},{value:"Using environment in project",id:"using-environment-in-project",children:[]},{value:"Using environment in CLI",id:"using-environment-in-cli",children:[]}],c={rightToc:l};function s(e){let{components:n,...t}=e;return Object(i.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Environment variables helps us define static variables for our application.\nIt allows us to configure our project for different deployments without changing the codes inside our application.\nWe can define environment variables for production, development and even custom environment variables."),Object(i.b)("p",null,"Whe we create our application there are two available environment variables provided for us.\nIf we check the ",Object(i.b)("inlineCode",{parentName:"p"},"src/environments")," directory, we can see that there is ",Object(i.b)("inlineCode",{parentName:"p"},"dev.json")," and ",Object(i.b)("inlineCode",{parentName:"p"},"prod.json"),"."),Object(i.b)("h2",{id:"custom-environment-variables"},"Custom environment variables"),Object(i.b)("p",null,"To create a new environment variable, we just need to create a file named ",Object(i.b)("inlineCode",{parentName:"p"},"<env name>.json"),".\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"<env name>")," is the one that is being used in the cli option ",Object(i.b)("inlineCode",{parentName:"p"},"--env"),"."),Object(i.b)("p",null,"Inside the created environment file should be a json with a require property ",Object(i.b)("inlineCode",{parentName:"p"},"MODE"),"."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n    "MODE": "production"\n}\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"MODE")," property can have value of ",Object(i.b)("inlineCode",{parentName:"p"},"production")," or ",Object(i.b)("inlineCode",{parentName:"p"},"development"),".\nThis is to identify what type of build we are going to make when using the environment."),Object(i.b)("h2",{id:"using-environment-in-project"},"Using environment in project"),Object(i.b)("p",null,"To use our environment variables inside our project we can call it using ",Object(i.b)("inlineCode",{parentName:"p"},"process.env.<env property name>"),"."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import { Component } from '@monster-js/core';\n\n@Component('app-deployment')\nexport class Deployment {\n    render() {\n        return <h1>Deployment: {process.env.MODE}</h1>\n    }\n}\n")),Object(i.b)("h2",{id:"using-environment-in-cli"},"Using environment in CLI"),Object(i.b)("p",null,"To use our environment variables in CLI, we just need to pass the environment name to the ",Object(i.b)("inlineCode",{parentName:"p"},"--env")," option in CLI commands."),Object(i.b)("p",null,"Example, if we have environment variables like the following:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"environments\n    \u251c\u2500\u2500 dev.json\n    \u251c\u2500\u2500 uat.json\n    \u2514\u2500\u2500 prod.json\n")),Object(i.b)("p",null,"And we want to build our application using the ",Object(i.b)("inlineCode",{parentName:"p"},"uat.json")," environment.\nThen we can use the following command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"mn build --env uat\n")))}s.isMDXComponent=!0}}]);