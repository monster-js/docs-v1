(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,d=u["".concat(a,".").concat(b)]||u[b]||m[b]||i;return n?o.a.createElement(d,s(s({ref:t},l),{},{components:n})):o.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),i=(n(0),n(102)),a=["components"],s={id:"intro-to-unit-testing.md",title:"Intro to unit testing",sidebar_label:"Intro to unit testing",slug:"/testing"},c={unversionedId:"intro-to-unit-testing.md",id:"intro-to-unit-testing.md",isDocsHomePage:!1,title:"Intro to unit testing",description:"Unit testing is a way to verify that individual units of source code are working as expected.",source:"@site/docs\\intro-to-unit-testing.md",slug:"/testing",permalink:"/docs/testing",editUrl:"https://github.com/monster-js/docs-v1/blob/master/docs/intro-to-unit-testing.md",version:"current",sidebar_label:"Intro to unit testing",sidebar:"someSidebar",previous:{title:"Known issues",permalink:"/docs/known-issues"},next:{title:"Component testing",permalink:"/docs/component-testing"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Test files",id:"test-files",children:[]},{value:"Upcoming features",id:"upcoming-features",children:[]}],p={rightToc:l};function u(e){var t=e.components,n=Object(o.a)(e,a);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Unit testing is a way to verify that individual units of source code are working as expected.\nMonsterJS provides a testing tools found in ",Object(i.b)("inlineCode",{parentName:"p"},"@monster-js/tester")," package.\nUnit testing in MonsterJS uses ",Object(i.b)("a",{parentName:"p",href:"https://karma-runner.github.io/latest/index.html"},"karma")," test runner and ",Object(i.b)("a",{parentName:"p",href:"https://jasmine.github.io/"},"jasmine")," testing framework."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"To install this package we just need to run the following command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @monster-js/tester\n")),Object(i.b)("p",null,"Now we can import the testing tools in our ",Object(i.b)("inlineCode",{parentName:"p"},".test.ts")," files."),Object(i.b)("h2",{id:"test-files"},"Test files"),Object(i.b)("p",null,"The test files in MonsterJS ends with ",Object(i.b)("inlineCode",{parentName:"p"},".test.ts")," extension.\nAll files that ends with this extension are used during testing and should not contain any production codes.\nAn example of this test files can be found in a component folder when we generate a component using ",Object(i.b)("inlineCode",{parentName:"p"},"mn generate component")," command."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"greeting\n    \u251c\u2500\u2500 greeting.component.tsx\n    \u251c\u2500\u2500 greeting.styles.scss\n    \u2514\u2500\u2500 greeting.test.ts\n")),Object(i.b)("p",null,"Here is an example of a working unit test for a component."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import { Greeting } from './greeting.component';\nimport { createTester } from '@monster-js/tester';\n\nconst tester = createTester(Greeting);\n\nit('should create a component', function() {\n    const { host, element, component, shadowRoot } = tester.createComponent();\n    expect(host).toBeTruthy();\n    expect(element).toBeTruthy();\n    expect(component).toBeTruthy();\n    expect(shadowRoot).toBeTruthy();\n});\n")),Object(i.b)("h2",{id:"upcoming-features"},"Upcoming features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Support for testing services"),Object(i.b)("li",{parentName:"ul"},"Support for testing directives"),Object(i.b)("li",{parentName:"ul"},"Support for testing pipes"),Object(i.b)("li",{parentName:"ul"},"Support for testing modules"),Object(i.b)("li",{parentName:"ul"},"Support for testing store"),Object(i.b)("li",{parentName:"ul"},"Support for testing routes")))}u.isMDXComponent=!0}}]);