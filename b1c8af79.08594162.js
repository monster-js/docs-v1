(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=b(n),d=r,u=m["".concat(l,".").concat(d)]||m[d]||s[d]||o;return n?a.a.createElement(u,c(c({ref:t},p),{},{components:n})):a.a.createElement(u,c({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var p=2;p<o;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return m}));var r=n(2),a=n(6),o=(n(0),n(102)),l=["components"],c={id:"cli-local-development-server.md",title:"Local development server",sidebar_label:"Local development server",slug:"/local-development-server"},i={unversionedId:"cli-local-development-server.md",id:"cli-local-development-server.md",isDocsHomePage:!1,title:"Local development server",description:"MonsterJS CLI provides a command to start a local development server allowing us to see the changes we made in our project before making it live.",source:"@site/docs\\cli-local-development-server.md",slug:"/local-development-server",permalink:"/docs/local-development-server",editUrl:"https://github.com/monster-js/docs-v1/blob/master/docs/cli-local-development-server.md",version:"current",sidebar_label:"Local development server",sidebar:"someSidebar",previous:{title:"Create application",permalink:"/docs/cli-create-application"},next:{title:"Build project",permalink:"/docs/build-project"}},p=[{value:"Serve command",id:"serve-command",children:[]},{value:"Command options",id:"command-options",children:[]}],b={rightToc:p};function m(e){var t=e.components,n=Object(a.a)(e,l);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"MonsterJS CLI provides a command to start a local development server allowing us to see the changes we made in our project before making it live."),Object(o.b)("h2",{id:"serve-command"},"Serve command"),Object(o.b)("p",null,"To start the local development server we can run the following command:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mn serve\n")),Object(o.b)("p",null,"The command above will start a development server in port ",Object(o.b)("inlineCode",{parentName:"p"},"4000")," and will use the ",Object(o.b)("inlineCode",{parentName:"p"},"dev")," environment variables.\nPlease see ",Object(o.b)("a",{parentName:"p",href:"./environment-variables"},"environment variables")," for more information about these variables."),Object(o.b)("p",null,"When the server is running we can now view our project by pointing our browsers to ",Object(o.b)("inlineCode",{parentName:"p"},"http://localhost:4000"),"."),Object(o.b)("h2",{id:"command-options"},"Command options"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Option"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Value type"),Object(o.b)("th",{parentName:"tr",align:null},"Default"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--env <value",">"),Object(o.b)("td",{parentName:"tr",align:null},"Serve the project using the specified environment."),Object(o.b)("td",{parentName:"tr",align:null},"string"),Object(o.b)("td",{parentName:"tr",align:null},"dev")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--port <value",">"),Object(o.b)("td",{parentName:"tr",align:null},"Set the port for the local development server."),Object(o.b)("td",{parentName:"tr",align:null},"number"),Object(o.b)("td",{parentName:"tr",align:null},"4000")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--open"),Object(o.b)("td",{parentName:"tr",align:null},"Opens a browser when local development server is ready."),Object(o.b)("td",{parentName:"tr",align:null},"boolean"),Object(o.b)("td",{parentName:"tr",align:null},"false")))),Object(o.b)("p",null,"Ex."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mn serve --port 8080\n")))}m.isMDXComponent=!0}}]);